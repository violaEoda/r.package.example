name: learn-github-actions

on: [push]

env:
  # additional flags for `R CMD CHECK`
  EXTRA_CHECK_FLAGS: "--no-manual --no-build-vignettes"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo üõé
        # We're using an official GitHub Action.
        uses: actions/checkout@v4.1.1
        with:
          # Action inputs (arguments/parameters).
          # In this case we clone the repository to the directory called the same
          # as the repository name.
          path: ${{ github.event.repository.name }}

      - name: Setup R üîß
        uses: r-lib/actions/setup-r@v2

      
      - name: Setup R dependencies üîß
        # We're using a third-party GitHub Action.
        uses: r-lib/actions/setup-r-dependencies@v2
        with:
          working-directory: ${{ github.event.repository.name }}

      - name: Install pkgload if necessary
        run: Rscript -e 'if (!"pkgload" %in% rownames(installed.packages())) install.packages("pkgload")'
      - name: Install devtools if necessary
        run: Rscript -e 'if (!"devtools" %in% rownames(installed.packages())) install.packages("devtools", repos="https://cloud.r-project.org")'     
      - name: Installed packages üì¶
        run: sort(rownames(installed.packages()))
        shell: Rscript {0}
        
      # Get package name and version from DESCRIPTION so that we'll know
      # what's the name of the tar.gz file with the built package.
      # pkgbuild is set as an output which can be accessed by subsequent steps.
      - name: Get package name üì¶
        id: package-name
        run: |
          PKGBUILD="$(Rscript -e 'cat(sprintf("%s_%s.tar.gz",(dcf <- read.dcf("DESCRIPTION"))[,"Package"], dcf[,"Version"]))')"
          echo "PKGBUILD = $PKGBUILD"
          echo "pkgbuild=$PKGBUILD" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: ${{ github.event.repository.name }}
      
      - name: Get working directory
        run: ls
      # Build a package stored in a directory called ${{ github.event.repository.name }}
      # --no-manual --no-build-vignettes because this requires LaTeX.
      - name: Build R package üèó
        run: |
          R CMD build ${EXTRA_CHECK_FLAGS} ${{ github.event.repository.name }}
          ls -l
        shell: bash

      - name: Load package üç≠
        run: |
          sort(rownames(installed.packages()))
          library(devtools)
          devtools::install(".")
          library(${{ github.event.repository.name }})
          join_and(c("Max", "Moritz"))
        shell: Rscript {0}
        env:
          PATH: ${{ github.event.repository.name }}
        
      - name: Use helper function
        if: false
        run: Rscript -e 'library(${{ github.event.repository.name }}); join_and(c("Max", "Moritz"))'
